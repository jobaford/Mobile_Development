ðŸ”Ž **Linear Search**

* Goes one by one through the list until it finds the element.
* Slow for big lists. Example: finding 27 in `[1..30]` takes 27 steps.

---

âš¡ **Binary Search**

* Works only on **sorted lists**.
* Repeatedly checks the **middle** element, then cuts the search space in half.
* Much faster â€” e.g., finding 27 in `[1..30]` takes only 3 steps.

---

âœ… In Kotlin you donâ€™t need to code it yourself:

```kotlin
val numbers = (1..30).toList()
println(numbers.binarySearch(27)) // prints 26 (index of 27)
```

ðŸ‘‰ Binary search is way faster than linear search for big sorted lists.

---

